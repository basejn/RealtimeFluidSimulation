#version 430 core
#define PI 3.1415926535897932384626433832795
layout (points) in;
layout (triangle_strip, max_vertices = 101) out;
 uniform mat4 proj_mat;
 uniform mat4 mv_mat;

 

out GS_OUT
{
    float pointSize;
	vec3 N;
} gs_out;

mat3 rotationMatrix(vec3 axis, float angle)
{
    axis = normalize(axis);
    float s = sin(angle);
    float c = cos(angle);
    float oc = 1.0 - c;
    
    return mat3(oc * axis.x * axis.x + c,           oc * axis.x * axis.y - axis.z * s,  oc * axis.z * axis.x + axis.y * s,  
                oc * axis.x * axis.y + axis.z * s,  oc * axis.y * axis.y + c,           oc * axis.y * axis.z - axis.x * s,  
                oc * axis.z * axis.x - axis.y * s,  oc * axis.y * axis.z + axis.x * s,  oc * axis.z * axis.z + c   );                     
}
const float R=0.5;
const float step =PI/ 3;
float[] vertices={  -0.000000,-0.000000,-0.500000,
-0.000000,-0.000000,-0.500000,
0.375000,0.216506,-0.250000,
0.000000,0.433013,-0.250000,
0.375000,0.216506,0.250000,
0.000000,0.433013,0.250000,
-0.000000,-0.000000,0.500000,
-0.000000,-0.000000,0.500000,
-0.375000,-0.216506,0.250000,
-0.000000,-0.433013,0.250000,
-0.000000,0.000000,-0.500000,
-0.000000,-0.000000,-0.500000,
0.375000,-0.216506,-0.250000,
0.375000,0.216506,-0.250000,
0.375000,-0.216506,0.250000,
0.375000,0.216506,0.250000,
-0.000000,0.000000,0.500000,
-0.000000,-0.000000,0.500000,
-0.375000,0.216506,0.250000,
-0.375000,-0.216506,0.250000,
0.000000,0.000000,-0.500000,
-0.000000,0.000000,-0.500000,
-0.000000,-0.433013,-0.250000,
0.375000,-0.216506,-0.250000,
-0.000000,-0.433013,0.250000,
0.375000,-0.216506,0.250000,
0.000000,0.000000,0.500000,
-0.000000,0.000000,0.500000,
0.000000,0.433013,0.250000,
-0.375000,0.216506,0.250000,
0.000000,0.000000,-0.500000,
0.000000,0.000000,-0.500000,
-0.375000,-0.216506,-0.250000,
-0.000000,-0.433013,-0.250000,
-0.375000,-0.216506,0.250000,
-0.000000,-0.433013,0.250000,
0.000000,0.000000,0.500000,
0.000000,0.000000,0.500000,
0.375000,0.216506,0.250000,
0.000000,0.433013,0.250000,
0.000000,-0.000000,-0.500000,
0.000000,0.000000,-0.500000,
-0.375000,0.216506,-0.250000,
-0.375000,-0.216506,-0.250000,
-0.375000,0.216506,0.250000,
-0.375000,-0.216506,0.250000,
0.000000,-0.000000,0.500000,
0.000000,0.000000,0.500000,
0.375000,-0.216506,0.250000,
0.375000,0.216506,0.250000,
0.000000,-0.000000,-0.500000,
0.000000,-0.000000,-0.500000,
-0.000000,0.433013,-0.250000,
-0.375000,0.216506,-0.250000,
-0.000000,0.433013,0.250000,
-0.375000,0.216506,0.250000,
0.000000,-0.000000,0.500000,
0.000000,-0.000000,0.500000,
0.000000,-0.433013,0.250000,
0.375000,-0.216506,0.250000,
-0.000000,-0.000000,-0.500000,
0.000000,-0.000000,-0.500000,
0.375000,0.216507,-0.250000,
-0.000000,0.433013,-0.250000,
0.375000,0.216507,0.250000,
-0.000000,0.433013,0.250000,
-0.000000,-0.000000,0.500000,
0.000000,-0.000000,0.500000,
-0.375000,-0.216507,0.250000,
0.000000,-0.433013,0.250000};
void main(void)
{
vec4 O = gl_in[0].gl_Position;

gl_PointSize=10;

	for(float i=0;i<=2*PI;i+=step){
		for(float j=-PI/2;j<PI/2+step;j+=step){
	
			vec4 R_V=(vec4(R*sin(i+step)*cos(j),R*cos(i+step)*cos(j),R*sin(j),1.0));
			vec3 R_V_T = mat3(mv_mat)*R_V.xyz;
			gl_Position=proj_mat*(O+vec4(R_V_T,1.0));
			gs_out.N=normalize(R_V_T);
			EmitVertex();
			R_V=(vec4(R*sin(i)*cos(j),R*cos(i)*cos(j),R*sin(j),1.0));
			R_V_T = mat3(mv_mat)*R_V.xyz;
			gl_Position=proj_mat*(O+vec4(R_V_T,1.0));
			gs_out.N=normalize(R_V_T);
			EmitVertex();
		
		}
	}
	EndPrimitive();
 
	
    
}
